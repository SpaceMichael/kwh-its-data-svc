name: Development Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop

env:
  APP_NAME: ${{ github.event.repository.name }}
  JFROG_DOCKER_REGISTRY: artifactrepo.server.ha.org.hk:55743
  JFROG_REPO_PATH: int_docker_dev/projects/kcc-non/intranet
  OC_NAMESPACE: kccclinical-dev
  OC_SERVER_PRI: https://api.tstcld61.server.ha.org.hk:6443
  OC_DOCKER_REGISTRY: image-registry.openshift-image-registry.svc:5000

jobs:
  build-artifact:
    runs-on: [self-hosted]
    env:
      MAVEN_CONFIG: ${{ secrets.MAVEN_CONFIG }}
    steps:
      - uses: actions/checkout@v2

      - name: Create Maven configuration file
        run: |
          $Utf8NoBomEncoding = New-Object System.Text.UTF8Encoding $False
          [System.IO.File]::WriteAllLines(".mvn/maven.config", $env:MAVEN_CONFIG, $Utf8NoBomEncoding)

      - name: Build source with Maven
        run: mvn clean install

  build-image:
    needs: build-artifact
    runs-on: [self-hosted]
    steps:
      - name: Generate image tag
        id: gen-image-tag
        run: echo "::set-output name=TAG::$(Get-Date -Format "yy.M.d.Hmm")"

      - name: Build image with Docker
        run: docker build -t ${{ env.JFROG_DOCKER_REGISTRY }}/${{ env.JFROG_REPO_PATH }}/${{ env.APP_NAME }}:${{ steps.gen-image-tag.outputs.TAG }} .

      - name: Login to JFrog Docker Registry
        run: docker login -u ${{ secrets.JFROG_USERNAME }} -p '${{ secrets.JFROG_PASSWORD }}' ${{ env.JFROG_DOCKER_REGISTRY }}

      - name: Push image to JFrog Docker Registry
        run: docker push ${{ env.JFROG_DOCKER_REGISTRY }}/${{ env.JFROG_REPO_PATH }}/${{ env.APP_NAME }}:${{ steps.gen-image-tag.outputs.TAG }}
    outputs:
      IMAGE_TAG: ${{ steps.gen-image-tag.outputs.TAG }}

  deploy-openshift-dev-pri:
    needs: build-image
    runs-on: [self-hosted]
    env:
      IMAGE_TAG: ${{ needs.build-image.outputs.IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v2

      - name: Login to Openshift
        run: |
          oc login --username=${{ secrets.OC_DEV_USERNAME }} --password=${{ secrets.OC_DEV_PASSWORD }} --server=${{ env.OC_SERVER_PRI }}
          oc project ${{env.OC_NAMESPACE}}

      - name: Create JFrog Secret
        run: oc create secret docker-registry jfrog-secret --docker-server ${{ env.JFROG_DOCKER_REGISTRY }} --docker-username=${{ secrets.JFROG_USERNAME }} --docker-password='${{ secrets.JFROG_PASSWORD }}' --docker-email=${{ secrets.JFROG_EMAIL }} -n ${{env.OC_NAMESPACE}}
        continue-on-error: true

      - name: Import image from JFrog to OpenShift
        run: oc import-image ${{ env.APP_NAME }}:${{ env.IMAGE_TAG }} --from ${{ env.JFROG_DOCKER_REGISTRY }}/${{ env.JFROG_REPO_PATH }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }} --insecure --confirm --reference-policy=local -n ${{env.OC_NAMESPACE}}

      - name: Create resources from configuration file
        run: oc apply -f openshift-dev\${{ env.APP_NAME }}.yaml

      - name: Perform rolling update
        run: |
          oc set image deployment ${{ env.APP_NAME }} ${{ env.APP_NAME }}=${{ env.OC_DOCKER_REGISTRY }}/${{ env.OC_NAMESPACE }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }} -n ${{env.OC_NAMESPACE}}
          oc rollout status deployment/${{ env.APP_NAME }} -n ${{env.OC_NAMESPACE}}
