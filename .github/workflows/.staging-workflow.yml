name: Staging Workflow

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  #     - develop

env:
  APP_NAME: ${{ github.event.repository.name }}

jobs:
  build-artifact:
    name: Build artifact
    runs-on: [self-hosted]
    env:
      MAVEN_CONFIG: ${{ secrets.MAVEN_CONFIG }}
    steps:
      - uses: actions/checkout@v3

      - name: Create Maven configuration file
        run: |
          $Utf8NoBomEncoding = New-Object System.Text.UTF8Encoding $False
          [System.IO.File]::WriteAllLines(".mvn/maven.config", $env:MAVEN_CONFIG, $Utf8NoBomEncoding)

      - name: Build source with Maven
        run: mvn clean install

  build-container:
    name: Build container
    needs: build-artifact
    runs-on: [self-hosted]
    steps:
      - name: Generate image tag
        run: echo "IMAGE_TAG=$(Get-Date -Format "yy.M.d.Hmm")" >> $env:GITHUB_ENV

      - name: Build image with Docker
        run: docker build -t ${{ vars.ARTIFACTORY_DOCKER_REGISTRY }}/${{ vars.ARTIFACTORY_REPO_PATH_STG }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Login to JFrog Docker Registry
        run: docker login -u ${{ secrets.ARTIFACTORY_USER_STG }} -p '${{ secrets.ARTIFACTORY_PASSWORD_STG }}' ${{ vars.ARTIFACTORY_DOCKER_REGISTRY }}

      - name: Push image to JFrog Docker Registry
        run: docker push ${{ vars.ARTIFACTORY_DOCKER_REGISTRY }}/${{ vars.ARTIFACTORY_REPO_PATH_STG }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}
    outputs:
      IMAGE_TAG: ${{ env.IMAGE_TAG }}

  deploy-stg-c1:
    name: Deploy (Staging primary)
    needs: build-container
    runs-on: [self-hosted]
    env:
      IMAGE_TAG: ${{ needs.build-container.outputs.IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v3

      - name: Login to Openshift
        run: |
          oc login --token=${{ secrets.ECP_SA_TOKEN_STG_C1 }} --server=${{ vars.CLUSTER_URL_STG_C1 }}
          oc project ${{ vars.NAMESPACE_STG }}

      # - name: Create JFrog Secret
      #   run: oc create secret docker-registry jfrog-secret --docker-server ${{ vars.ARTIFACTORY_DOCKER_REGISTRY }} --docker-username=${{ secrets.ARTIFACTORY_USER_STG }} --docker-password='${{ secrets.ARTIFACTORY_PASSWORD_STG }}' --docker-email=${{ secrets.ARTIFACTORY_EMAIL_STG }} -n ${{ vars.NAMESPACE_STG }}
      #   continue-on-error: true

      - name: Import image from JFrog to OpenShift
        run: oc import-image ${{ env.APP_NAME }}:${{ env.IMAGE_TAG }} --from ${{ vars.ARTIFACTORY_DOCKER_REGISTRY }}/${{ vars.ARTIFACTORY_REPO_PATH_STG }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }} --confirm --reference-policy=local -n ${{ vars.NAMESPACE_STG }}

      - name: Update image tag in YAML configuration file
        run: (Get-Content openshift\${{ env.APP_NAME }}.yaml) -replace '/${{ env.APP_NAME }}', '/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}' | Set-Content openshift\${{ env.APP_NAME }}.yaml

      - name: Create resources from YAML configuration file
        run: oc apply -f openshift-stg\${{ env.APP_NAME }}.yaml

      - name: Check Rollout Status
        run: oc rollout status deployment/${{ env.APP_NAME }} -n ${{ vars.NAMESPACE_STG }}

  deploy-stg-c2:
    name: Deploy (Staging secondary)
    needs: [build-container]
    runs-on: [self-hosted]
    env:
      IMAGE_TAG: ${{ needs.build-container.outputs.IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v3

      - name: Login to Openshift
        run: |
          oc login --token=${{ secrets.ECP_SA_TOKEN_STG_C2 }} --server=${{ vars.CLUSTER_URL_STG_C2 }}
          oc project ${{ vars.NAMESPACE_STG }}

      # - name: Create JFrog Secret
      #   run: oc create secret docker-registry jfrog-secret --docker-server ${{ vars.ARTIFACTORY_DOCKER_REGISTRY }} --docker-username=${{ secrets.ARTIFACTORY_USER_STG }} --docker-password='${{ secrets.ARTIFACTORY_PASSWORD_STG }}' --docker-email=${{ secrets.ARTIFACTORY_EMAIL_STG }} -n ${ vars.NAMESPACE_STG }}
      #   continue-on-error: true

      - name: Import image from JFrog to OpenShift
        run: oc import-image ${{ env.APP_NAME }}:${{ env.IMAGE_TAG }} --from ${{ vars.ARTIFACTORY_DOCKER_REGISTRY }}/${{ vars.ARTIFACTORY_REPO_PATH_STG }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }} --confirm --reference-policy=local -n ${{ vars.NAMESPACE_STG }}

      - name: Update image tag in YAML configuration file
        run: (Get-Content openshift\${{ env.APP_NAME }}.yaml) -replace '/${{ env.APP_NAME }}', '/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}' | Set-Content openshift\${{ env.APP_NAME }}.yaml

      - name: Create resources from YAML configuration file
        run: oc apply -f openshift-stg\${{ env.APP_NAME }}.yaml

      - name: Check Rollout Status
        run: oc rollout status deployment/${{ env.APP_NAME }} -n ${{ vars.NAMESPACE_STG }}
